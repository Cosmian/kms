[package]
name = "cosmian_kms_cli"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
license-file = "../../LICENSE"
description = "CLI used to manage the Cosmian KMS."

[[bin]]
name = "ckms"
path = "src/main.rs"
test = false

[lib]
# doc test linking as a separate binary is extremely slow
# and is not needed for internal lib
doctest = false

[features]
# Staging is used to run tests with the remote kms test server. Otherwise, the test runs a local kms server.
staging = []
fips = ["cosmian_kms_client/fips"]

[dependencies]
# Avoid pulling openssl
actix-web = { workspace = true, features = ["macros"] }
base64 = { workspace = true }
clap = { workspace = true, features = [
  "help",
  "env",
  "std",
  "usage",
  "error-context",
  "derive",
  "cargo",
] }
cloudproof = { workspace = true }
cosmian_kms_client = { path = "../client" }
der = { version = "0.7", features = ["pem"] }
env_logger = { workspace = true }
jwt-simple = { version = "0.12", default-features = false, features = [
  "pure-rust",
] }
oauth2 = "4.4"
pem = "3.0"
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
strum = { workspace = true, features = ["std", "derive", "strum_macros"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true }
url = { workspace = true }
uuid = { workspace = true }
x509-cert = { version = "0.2", features = ["pem"] }
zeroize = { workspace = true }

[dev-dependencies]
actix-rt = { workspace = true }
actix-server = { workspace = true }
assert_cmd = "2.0"
const-oid = { version = "0.9", features = ["db"] }
cosmian_kms_server = { path = "../server", features = [
  "insecure",
], default-features = false }
kms_test_server = { path = "../test_server" }
openssl = { workspace = true }
predicates = "3.1"
regex = { version = "1.10", default-features = false }
tempfile = "3.10"
x509-parser = { workspace = true, features = ["verify"] }
