[package]
name = "cosmian_kms_server"
version = "4.10.1"
authors = ["Bruno Grieder <bruno.grieder@cosmian.com>"]
edition = "2021"
license-file = "../../LICENSE.md"
description = "Cosmian Key Management Service"

[features]
# Do not verify auth0 token expiration date and https ssl is auto-signed (to avoid to be banned by letsencrypt)
insecure = []
# The binary won't start after a date chosen at compile-time
timeout = []

# Enable all the feature even insecure but timeout
staging = ["insecure"]

# Enable FIPS module feature build. KMS builds in FIPS mode when this is enabled.
fips = ["cosmian_kms_utils/fips"]

# No features (insecure, timeout or staging) and contain non FIPS approved libraries (e.g. Rust Crypto)
default = []
prod = []

[dependencies]
actix-cors = "0.6"
actix-identity = "0.6"
actix-rt = { workspace = true }
actix-service = "2.0"
actix-tls = "3.1"
actix-web = { workspace = true }
alcoholic_jwt = "4091"
async-recursion = "1.0"
async-trait = { workspace = true }
base64 = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true }
clap-serde-derive = "0.2"
cloudproof = { workspace = true }
cosmian_kmip = { path = "../kmip", features = ["openssl"] }
cosmian_kms_utils = { path = "../utils", features = ["curve25519"] }
dirs = "5.0"
dotenvy = "0.15"
env_logger = "0.10"
futures = "0.3"
hex = { workspace = true, features = ["serde"] }
http = { workspace = true }
josekit = { workspace = true }
lazy_static = "1.4"
mime = "0.3"
openssl = { workspace = true }
rawsql = "0.1"
redis = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sqlx = { version = "0.7.3", default-features = false, features = [
  "json",
  "runtime-tokio-native-tls",
  "mysql",
  "postgres",
  "sqlite",
] }
thiserror = { workspace = true }
time = { workspace = true, features = ["local-offset", "formatting"] }
# this version of tokio should be the same as the one used in actix-web
# run `cargo tree -i tokio` to check
tokio = { workspace = true }
toml = "0.8"
tracing = { workspace = true }
url = { workspace = true }
uuid = { workspace = true }
x509-parser = { workspace = true }
zeroize = { workspace = true }

[dev-dependencies]
actix-http = "3.4"
cosmian_logger = { path = "../logger" }

[build-dependencies]
time = { workspace = true, features = ["local-offset", "formatting"] }

[[bin]]
name = "cosmian_kms_server"
path = "src/main.rs"

[lib]
name = "cosmian_kms_server"
path = "src/lib.rs"
