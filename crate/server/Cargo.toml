[package]
authors = ["Bruno Grieder <bruno.grieder@cosmian.com>"]
edition = "2021"
name = "cosmian_kms_server"
version = "2.0.1"
description = "Cosmian Key Management Service"

[features]
# Enable authentication (via auth0). If disabled, multi-user is not supported
auth = []
# Enable enclave mode
enclave = []
# Enable https in the KMS in order to encrypt query between client and the KMS. If disabled, use http
https = []
# Do not verify auth0 token expiration date and https ssl is auto-signed (to avoid to be banned by letsencrypt)
insecure = []
# The binary won't start after a date chosen at compile-time
timeout = ["actix-rt"]

# Disable https, disable enclave, enable auth but unsecurely
# To run on a dev environment
dev = ["auth", "insecure"]

# Enable all the feature even insecure but timeout
# To run in a test environment using a real domain name and enclaves without the rest api limit of let's encrypt
staging = ["auth", "insecure", "https", "enclave"]

# Enable all but timeout
prod = ["auth", "https", "enclave"]
default = ["prod"]


[dependencies]
abe_gpsw = { version = "0.6.9", features = ["interfaces"] }
# We use our own acme-lib. We have removed timeout set to ureq
# For a reason we ignore right now, it fails inside the enclave if we set timeout
acme-lib = { git = "https://github.com/Cosmian/acme-lib" }
actix-files = "0.6.0"
actix-identity = "0.4"
actix-rt = { version = "2.6", optional = true }
actix-service = "2.0"
actix-web = { version = "4.0", features = ["openssl"] }
alcoholic_jwt = "1.0"
async-trait = "0.1"
base64 = "0.13"
bitflags = "1.2"
clap = { version = "3.1", features = ["derive", "cargo", "env"] }
chrono = "0.4"
cosmian_crypto_base = { version = "1.3.0", features = ["libsodium"] }
cosmian_kmip = { path = "../kmip" }
cosmian_kms_utils = { path = "../utils" }
cosmian_mcfe = { git = "https://github.com/Cosmian/DMCFE.git", branch = "feature/add_mcfe" }
cover_crypt = "2.0.0"
dotenv = "0.15.0"
env_logger = "0.9"
# eyre is used to handle errors related to the server binary
eyre = "0.6"
futures = "0.3"
hex = { version = "0.4", features = ["serde"] }
# for status codes
http = "0.2"
lazy_static = "1.4"
libsgx = { path = "../libsgx" }
# Explicit import so that sqlcipher is enabled for sqlx (no pass-through feature available)
# see: https://github.com/launchbadge/sqlx/issues/1436
libsqlite3-sys = { version = "0.24", features = ["bundled-sqlcipher-vendored-openssl"] }
num-bigint = "0.4"
once_cell = "1.9"
openssl = { version = "0.10", features = ["vendored"] }
rand_core = "0.6"
rand_hc = "0.3"
reqwest = { version = "0.11", features = ["json"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
sha3 = "0.10"
# do not use version > 20, `funty` sub-dependencies is incompatible with
# some of our crypto crates' sub-dependencies
mysql = "20"
rawsql = { git = "https://github.com/manute/rawsql" }
sqlx = { version = "0.5", features = [
  "json",
  "runtime-actix-native-tls",
  "mysql",
  "postgres",
  "sqlite",
] }
# thiserror is used to handle errors propagated through HTTP response
# to set a proper http status code
thiserror = "1.0.20"
torus_fhe = { git = "http://gitlab.cosmian.com/other/tfhe.git" }
tracing = "0.1"
tracing-log = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-tree = "0.2"
uuid = { version = "1.0.0", features = ["v4"] }

[dev-dependencies]
actix-rt = "2.6"
actix-http = "3.0"
tempfile = "3.1"
serial_test = "0.6"

[build-dependencies]
chrono = "0.4"
