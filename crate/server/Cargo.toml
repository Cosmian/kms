[package]
name = "cosmian_kms_server"
version = "4.5.0"
authors = ["Bruno Grieder <bruno.grieder@cosmian.com>"]
edition = "2021"
license-file = "../../LICENSE.md"
description = "Cosmian Key Management Service"

[features]
# Do not verify auth0 token expiration date and https ssl is auto-signed (to avoid to be banned by letsencrypt)
insecure = []
# The binary won't start after a date chosen at compile-time
timeout = ["actix-rt"]

# Enable all the feature even insecure but timeout
# To run in a test environment using a real domain name and enclaves without the rest api limit of let's encrypt
staging = ["insecure"]

# No features (insecure, timeout or staging)
default = []
prod = []

[dependencies]
# We use our own acme-lib. We have removed timeout set to ureq
# For a reason we ignore right now, it fails inside the enclave if we set timeout
acme-lib = { git = "https://github.com/Cosmian/acme-lib" }
actix-cors = "0.6"
actix-files = "0.6"
actix-identity = "0.4"
actix-rt = { version = "2.8", optional = true }
actix-service = "2.0"
actix-tls = "3.0.3"
actix-web = { version = "4.3", features = ["openssl"] }
alcoholic_jwt = "4091"
async-recursion = "1.0"
async-trait = { workspace = true }
base64 = { workspace = true }
clap = { workspace = true, features = ["env", "std"] }
cloudproof = { workspace = true }
cosmian_kmip = { path = "../kmip" }
cosmian_findex_redis = { path = "../findex_redis" }
cosmian_kms_utils = { path = "../utils", features = ["curve25519"] }
dirs = "5.0"
dotenvy = "0.15"
env_logger = { workspace = true }
eyre = { workspace = true }
futures = "0.3"
hex = { workspace = true, features = ["serde"] }
http = { workspace = true }
josekit = { workspace = true }
lazy_static = "1.4"
libsgx = { path = "../libsgx" }
openssl = { workspace = true }
rawsql = "0.1"
redis = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sqlx = { version = "0.7.0-alpha.3", default-features = false, features = ["json", "runtime-tokio-native-tls", "mysql", "postgres", "sqlite"] }
thiserror = { workspace = true }
time = { workspace = true, features = ["local-offset", "formatting"] }
tracing = { workspace = true }
tracing-log = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-tree = { workspace = true }
uuid = { workspace = true }

[dev-dependencies]
actix-http = "3.3"
actix-rt = "2.8"

[build-dependencies]
time = { workspace = true, features = ["local-offset", "formatting"] }
