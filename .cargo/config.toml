[alias]
# Check for formatting
format = "fmt --all -- --check"

# Build all features, all targets and all binaries
build-all = "build --workspace --all-targets --all-features --bins"
build-all-release = "build --release --workspace --all-targets --all-features --bins"

# Run Clippy on all code paths
clippy-all = "clippy --workspace --all-targets --all-features -- -D warnings"

# Run coverage
coverage = "tarpaulin --release -v -f -t 1800 --out Xml --ignore-tests --exclude-files resources/* apps/*"

# Find unused dependencies
deps = "udeps --workspace --all-targets --all-features --backend depinfo"

###
# This options have been commented out because the Github runners responsible to build the KMS docker image have unpredictable CPU architectures, resulting in an error code 132 when running the generated container.
# However, those flags are specifically given by CI in other builds (macos, windows, linux, centos7) in cargo_build.yml via the RUSTFLAGS environment variable.
###
# [build]
# # Speeds up Ristretto 25519 multiplication x 2
# rustflags = [
#   "--cfg",
#   "curve25519_dalek_backend=\"simd\"",
#   "-C",
#   "target_cpu=native",
# ]

# On Windows, the linker may exceed its number of allowed symbols
# This is likely going to require nightly
# see https://github.com/rust-lang/rust/issues/53014#issuecomment-646149774
[target.aarch64-pc-windows-msvc]
rustflags = "-Zshare-generics=off"
[target.x86_64-pc-windows-msvc]
rustflags = "-Zshare-generics=off"
