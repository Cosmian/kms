FROM alpine:3.21.3

LABEL version="4.22.1"
LABEL name="Cosmian KMS FIPS docker container"

ENV DEBIAN_FRONTEND=noninteractive
ENV OPENSSL_DIR=/usr/local/openssl

WORKDIR /root

RUN apk update \
    && apk add -q \
    gcc \
    musl-dev \
    python3-dev \
    libffi-dev \
    cargo \
    curl \
    build-base \
    libressl-dev \
    ca-certificates \
    clang17-libclang \
    pkgconfig \
    git \
    wget \
    && apk upgrade -q  \
    && apk cache clean \
    && rm -rf /etc/apk/repositories

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain "nightly-x86_64-unknown-linux-gnu"

COPY . /root/kms

WORKDIR /root/kms

ARG TARGETPLATFORM
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then export ARCHITECTURE=x86_64; elif [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then export ARCHITECTURE=arm; elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then export ARCHITECTURE=arm64; else export ARCHITECTURE=x86_64; fi \
    && sh /root/kms/.github/scripts/get_openssl_binaries.sh

RUN /root/.cargo/bin/cargo build -p cosmian_kms_cli -p cosmian_kms_server --release --no-default-features --features="fips" \
    && cp /root/kms/target/release/cosmian_kms        /usr/bin/cosmian_kms \
    && cp /root/kms/target/release/ckms               /usr/bin/ckms

#
# Create working directory
#
WORKDIR /data

EXPOSE 9998

ENTRYPOINT ["cosmian_kms"]
