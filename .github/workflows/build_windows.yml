---
name: KMS cargo build - windows

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      archive-name:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string

jobs:
  kms-build:
    name: ${{ inputs.archive-name }}
    runs-on: windows-2022
    steps:
      - name: Print ENV
        run: printenv

      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.toolchain }}
          components: rustfmt, clippy

      # - name: Discover dumpbin location
      #   shell: pwsh
      #   run: |
      #     Get-ChildItem -Recurse "C:\Program Files\Microsoft Visual Studio"

      - name: Discover environment variables on Runner
        shell: pwsh
        run: |
          Get-ChildItem env:

      - name: Locate VCPKG_INSTALLATION_ROOT
        shell: pwsh
        run: |
          Get-ChildItem $env:VCPKG_INSTALLATION_ROOT

      - name: Build static OpenSSL
        shell: pwsh
        run: |
          vcpkg install --triplet x64-windows-static
          vcpkg integrate install

          Get-ChildItem -Recurse "$env:VCPKG_INSTALLATION_ROOT\packages"

      - name: Build
        shell: pwsh
        run: |
          . .\.github\scripts\cargo_build.ps1
          BuildProject -BuildType ${{ inputs.debug_or_release }}
        env:
          # Google variables
          TEST_GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.TEST_GOOGLE_OAUTH_CLIENT_ID }}
          TEST_GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.TEST_GOOGLE_OAUTH_CLIENT_SECRET }}
          TEST_GOOGLE_OAUTH_REFRESH_TOKEN: ${{ secrets.TEST_GOOGLE_OAUTH_REFRESH_TOKEN }}

      - name: Build FIPS OpenSSL
        shell: pwsh
        run: |
          Copy-Item -Path "vcpkg_fips.json" -Destination "vcpkg.json"
          vcpkg install
          vcpkg integrate install

          Get-ChildItem -Recurse "$env:VCPKG_INSTALLATION_ROOT\packages"

          # Copy fips.dll to the specified directory
          Copy-Item -Path "$env:VCPKG_INSTALLATION_ROOT\packages\openssl_x64-windows\bin\legacy.dll" -Destination "D:\a\kms\kms"
          Copy-Item -Path "$env:VCPKG_INSTALLATION_ROOT\packages\openssl_x64-windows\bin\fips.dll" -Destination "D:\a\kms\kms"

      - name: Upload KMS for windows-2022
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.archive-name }}-${{ inputs.debug_or_release }}
          path: |
            target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/ckms.exe
            target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/cosmian_kms_server.exe
            target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/ckms_pkcs11.dll
            fips.dll
            legacy.dll
          retention-days: 1
          if-no-files-found: error

  kms-test:
    needs: kms-build
    name: Clean env. ${{ inputs.archive-name }}
    runs-on: windows-2022
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.archive-name }}-${{ inputs.debug_or_release }}

      - name: List files recursively
        shell: pwsh
        run: Get-ChildItem -Recurse

      - name: Copy legacy.dll
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path C:/Windows/System32/OpenSSL/lib/ossl-modules
          Copy-Item -Path legacy.dll -Destination C:/Windows/System32/OpenSSL/lib/ossl-modules/legacy.dll
          Get-ChildItem -Recurse C:/Windows/System32/OpenSSL

      - name: Launch ckms and cosmian_kms_server
        run: |
          pwd
          ./target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/ckms.exe -V
          ./target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/cosmian_kms_server.exe --info
