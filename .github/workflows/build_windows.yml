---
name: KMS cargo build - windows

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      archive-name:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string

jobs:
  kms-build:
    name: ${{ inputs.archive-name }}
    runs-on: windows-2022
    steps:
      - name: Print ENV
        run: printenv

      - uses: actions/checkout@v4

      - name: Cache dependencies
        id: cargo_cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-windows-2022
          cache-directories: |
            $VCPKG_INSTALLATION_ROOT

      - uses: dtolnay/rust-toolchain@master
        if: steps.cargo_cache.outputs.cache-hit != 'true'
        with:
          toolchain: ${{ inputs.toolchain }}
          components: rustfmt, clippy

      - name: Build
        if: steps.cargo_cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          . .\.github\scripts\windows_build.ps1
          Build-Project -BuildType ${{ inputs.debug_or_release }}
        env:
          # Google variables
          TEST_GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.TEST_GOOGLE_OAUTH_CLIENT_ID }}
          TEST_GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.TEST_GOOGLE_OAUTH_CLIENT_SECRET }}
          TEST_GOOGLE_OAUTH_REFRESH_TOKEN: ${{ secrets.TEST_GOOGLE_OAUTH_REFRESH_TOKEN }}

      - name: Upload KMS for windows-2022
        if: steps.cargo_cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.archive-name }}-${{ inputs.debug_or_release }}
          path: |
            target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/ckms.exe
            target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/cosmian_kms_server.exe
            target/x86_64-pc-windows-msvc/${{ inputs.debug_or_release }}/ckms_pkcs11.dll
          retention-days: 1
          if-no-files-found: error
