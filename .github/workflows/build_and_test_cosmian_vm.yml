---
name: Build and Publish VM Image

on:
  workflow_call:
    inputs:
      distrib:
        required: true
        type: string

env:
  GCP_DEV_PROJECT: cosmian-dev
  GCP_PUBLIC_PROJECT: cosmian-public

jobs:
  build-kms-cosmian-vm-image:
    name: Build KMS in Cosmian VM Image for SEV
    runs-on: ubuntu-22.04
    outputs:
      timestamp: ${{ steps.env.outputs.TIMESTAMP }}
      image_name: ${{ steps.env.outputs.IMAGE_NAME }}
      ci_instance: ${{ steps.env.outputs.CI_INSTANCE }}
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: ./packer
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v3

      - name: List artifacts
        run: |
          find ..

      - name: Create env variables
        id: env
        run: |
          TIMESTAMP="$(date -u +'%Y%m%d%H%M%S')"
          echo "TIMESTAMP=$TIMESTAMP" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=alpha-$TIMESTAMP-cosmian-vm-kms-sev-${{ inputs.distrib }}" >> "$GITHUB_OUTPUT"
          echo "CI_INSTANCE=gh-ci-cosmian-vm-kms-$TIMESTAMP-${{ inputs.distrib }}" >> "$GITHUB_OUTPUT"

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main

      - name: Run `packer init`
        run: packer init -machine-readable gcp-sev-${{ inputs.distrib }}.pkr.hcl

      - name: Install plugins
        run: |
          packer plugins install github.com/hashicorp/amazon
          packer plugins install github.com/hashicorp/googlecompute

      - name: Authenticate to Google Cloud project
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_COSMIAN_DEV_CREDENTIALS }}

      - name: Build GCP images - main
        env:
          TIMESTAMP: ${{ steps.env.outputs.TIMESTAMP }}
        run: |
          packer build -var "prefix=alpha-$TIMESTAMP" gcp-sev-${{ inputs.distrib }}.pkr.hcl

  test-image:
    name: Test image
    runs-on: ubuntu-22.04
    needs: build-kms-cosmian-vm-image
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_COSMIAN_DEV_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: latest
          install_components: beta

      - name: Launch GCP instance
        id: run-gcp-instance
        env:
          IMAGE_NAME: ${{ needs.build-kms-cosmian-vm-image.outputs.image_name }}
          CI_INSTANCE: ${{ needs.build-kms-cosmian-vm-image.outputs.ci_instance }}
        run: |
          gcloud beta compute instances create $CI_INSTANCE --machine-type n2d-standard-2 \
                                                            --zone europe-west4-a \
                                                            --min-cpu-platform="AMD Milan" \
                                                            --confidential-compute-type=SEV_SNP \
                                                            --maintenance-policy=TERMINATE \
                                                            --image="$IMAGE_NAME" \
                                                            --image-project=$GCP_DEV_PROJECT \
                                                            --project $GCP_DEV_PROJECT \
                                                            --tags ssh-full,backend,http-server,https-server,cosmian-vm-agent \
                                                            --metadata-from-file=startup-script=scripts/gcp-start-${{ inputs.distrib }}.sh \
                                                            --max-run-duration=10m \
                                                            --instance-termination-action=DELETE
          IP_ADDR=$(gcloud beta compute instances describe $CI_INSTANCE --format='get(networkInterfaces[0].accessConfigs[0].natIP)' --zone=europe-west4-a)
          echo "IP_ADDR=${IP_ADDR}" >> "$GITHUB_OUTPUT"

      - name: Download Cosmian VM client
        run: |
          wget https://package.cosmian.com/cosmian_vm/1.1.0-rc.3/cosmian_vm

      - name: Change permissions of binaries
        run: |
          chmod +x ./cosmian_vm

      - name: Test Cosmian VM Agent on GCP instance
        env:
          IP_ADDR: ${{ steps.run-gcp-instance.outputs.IP_ADDR }}
        run: |
          echo "Waiting for Cosmian VM agent..."
          until curl --insecure --output /dev/null --silent --fail https://${IP_ADDR}:5355/ima/ascii; do sleep 3; done
          echo "[ OK ] Cosmian VM ready"
          ./cosmian_vm --url https://${IP_ADDR}:5355 --allow-insecure-tls snapshot
          ./cosmian_vm --url https://${IP_ADDR}:5355 --allow-insecure-tls verify --snapshot ./cosmian_vm.snapshot

      - name: Test KMS conf deployment with Cosmian VM CLI
        env:
          IP_ADDR: ${{ steps.run-gcp-instance.outputs.IP_ADDR }}
        run: |
          ./cosmian_vm --url https://${IP_ADDR}:5355 --allow-insecure-tls app init -c resources/kms.toml

      - name: Test KMS on the Cosmian VM
        env:
          IP_ADDR: ${{ steps.run-gcp-instance.outputs.IP_ADDR }}
        run: |
          echo "Checking Cosmian KMS HTTP connection..."
          curl http://${IP_ADDR}:8080/version
          echo ""
          echo "[ OK ] Cosmian KMS HTTP connection"
          echo "Checking Cosmian KMS HTTPS connection..."
          curl --insecure https://${IP_ADDR}/version
          echo ""
          echo "[ OK ] Cosmian KMS HTTPS connection"
          echo "Checking Cosmian KMS HTTP to HTTPS redirect connection..."
          curl --insecure http://${IP_ADDR}/version
          echo ""
          echo "[ OK ] Cosmian KMS HTTP to HTTPS redirect connection"

      - name: Restart the Cosmian VM and test again
        if: contains(inputs.distrib, 'ubuntu')
        env:
          CI_INSTANCE: ${{ needs.build-kms-cosmian-vm-image.outputs.ci_instance }}
        run: |
          sudo apt-get install -y jq moreutils
          echo "Rebooting instance..."
          gcloud beta compute instances stop $CI_INSTANCE --zone europe-west4-a --project $GCP_DEV_PROJECT
          gcloud beta compute instances start $CI_INSTANCE --zone europe-west4-a --project $GCP_DEV_PROJECT
          IP_ADDR=$(gcloud beta compute instances describe $CI_INSTANCE --format='get(networkInterfaces[0].accessConfigs[0].natIP)' --zone=europe-west4-a)
          timeout 4m bash -c "until curl --insecure --output /dev/null --silent --fail https://${IP_ADDR}:5355/ima/ascii; do sleep 3; done"
          echo "[ OK ] Cosmian VM ready after reboot"
          RESET_COUNT=$(cat cosmian_vm.snapshot | jq '.tpm_policy.reset_count')
          NEW_RESET_COUNT=$(expr $RESET_COUNT + 1)
          jq --arg NEW_RESET_COUNT "$NEW_RESET_COUNT" '.tpm_policy.reset_count = $NEW_RESET_COUNT' cosmian_vm.snapshot > new_cosmian_vm.snapshot
          jq '.tpm_policy.reset_count |= tonumber' new_cosmian_vm.snapshot | sponge new_cosmian_vm.snapshot
          ./cosmian_vm --url https://${IP_ADDR}:5355 --allow-insecure-tls verify --snapshot new_cosmian_vm.snapshot
          echo "[ OK ] Integrity after reboot"
          echo "Starting the KMS"
          ./cosmian_vm --url https://${IP_ADDR}:5355 --allow-insecure-tls app restart
          echo "[ OK ] KMS is started"
          echo "Checking Cosmian KMS HTTP connection..."
          curl http://${IP_ADDR}:8080/version
          echo ""
          echo "[ OK ] Cosmian KMS HTTP connection"
          echo "Checking Cosmian KMS HTTPS connection..."
          curl --insecure https://${IP_ADDR}/version
          echo ""
          echo "[ OK ] Cosmian KMS HTTPS connection"
          echo "Checking Cosmian KMS HTTP to HTTPS redirect connection..."
          curl --insecure http://${IP_ADDR}/version
          echo ""
          echo "[ OK ] Cosmian KMS HTTP to HTTPS redirect connection"

      - name: Delete GCP instance
        # if: success() || failure()
        if: success()
        env:
          CI_INSTANCE: ${{ needs.build-kms-cosmian-vm-image.outputs.ci_instance }}
        run: |
          set +e
          gcloud beta compute instances delete $CI_INSTANCE --zone europe-west4-a \
                                                            --project $GCP_DEV_PROJECT

      - name: Delete GCP CI image
        if: startsWith(github.ref, 'refs/tags') != true
        env:
          IMAGE_NAME: ${{ needs.build-kms-cosmian-vm-image.outputs.image_name }}
        run: |
          set -ex
          gcloud beta compute images delete --quiet $IMAGE_NAME

  release-image:
    name: Release image
    runs-on: ubuntu-22.04
    needs: [build-kms-cosmian-vm-image, test-image]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_COSMIAN_DEV_CREDENTIALS }}

      - name: Copy image to public project
        if: startsWith(github.ref, 'refs/tags')
        env:
          CI_INSTANCE: ${{ needs.build-kms-cosmian-vm-image.outputs.ci_instance }}
          IMAGE_NAME: ${{ needs.build-kms-cosmian-vm-image.outputs.image_name }}
        run: |
          TAG=${{ github.ref_name }}
          VERSION=$(echo $TAG | sed 's/\./-/g; s/_/-/g; s/+/-/g')
          NEW_IMAGE_NAME=cosmian-vm-kms-$VERSION-sev-${{ inputs.distrib }}
          gcloud beta compute --project=$GCP_DEV_PROJECT images create $NEW_IMAGE_NAME --source-image=$IMAGE_NAME --source-image-project=$GCP_DEV_PROJECT
          gcloud beta compute --project=$GCP_PUBLIC_PROJECT images create $NEW_IMAGE_NAME --source-image=$IMAGE_NAME --source-image-project=$GCP_DEV_PROJECT
