---
name: CI checks

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string
      platforms:
        required: true
        type: string

jobs:
  cargo-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: EmbarkStudios/cargo-deny-action@v1

  cargo-lint:
    uses: ./.github/workflows/clippy.yml
    with:
      toolchain: ${{ inputs.toolchain }}

  build:
    uses: ./.github/workflows/build_all.yml
    secrets: inherit
    with:
      toolchain: ${{ inputs.toolchain }}
      debug_or_release: ${{ inputs.debug_or_release }}

  cargo-doc:
    if: inputs.debug_or_release == 'release'
    uses: Cosmian/reusable_workflows/.github/workflows/cargo-doc.yml@develop
    with:
      toolchain: ${{ inputs.toolchain }}

  not-fips-image:
    name: Not FIPS image build and tests
    uses: ./.github/workflows/build_docker_image.yml
    with:
      prefix: ''
      registry-image: ghcr.io/cosmian/kms
      platforms: ${{ inputs.platforms }}
      fips: false

  fips-image:
    name: FIPS image build and tests
    uses: ./.github/workflows/build_docker_image.yml
    with:
      prefix: FIPS
      registry-image: ghcr.io/cosmian/kms-fips
      platforms: ${{ inputs.platforms }}
      fips: true

  ##############################################################################
  ### Releases
  ##############################################################################
  release:
    name: release
    needs:
      - cargo-audit
      - cargo-lint
      - build
    runs-on: [self-hosted, not-sgx]
    container:
      image: cosmian/docker_doc_ci
      volumes:
        - /home/cosmian/.ssh/id_rsa:/root/.ssh/id_rsa

    env:
      ARCHIVE_NAMES: rhel9-${{ inputs.debug_or_release }} fips_ubuntu_22_04-${{ inputs.debug_or_release }} ubuntu_24_04-${{ inputs.debug_or_release }} macos_arm-${{
        inputs.debug_or_release }} kms_python_linux kms_python_macos_intel kms_python_macos_arm kms_python_windows

    steps:
      - run: rm -rf kms_* fips_* python-* windows* ubuntu* macos* rhel9* centos*
      - uses: actions/download-artifact@v4

      - run: find .

      - name: Creating zip to be attached to release
        run: |
          set -xe
          apt update -y
          apt-get install -y zip
          for archive_name in $ARCHIVE_NAMES; do
            zip -r "$archive_name".zip "$archive_name"
          done

          # Warning, no all binaries in debug, only in release
          if [ "${{ inputs.debug_or_release }}" == "release" ]; then
            zip -r ubuntu_22_04-release.zip ubuntu_22_04-release
            zip -r windows-release.zip windows-release
            zip -r macos_intel-release.zip macos_intel-release
          fi

      - name: Push to package.cosmian.com
        shell: bash
        run: |
          set -x
          if [[ "${GITHUB_REF}" =~ 'refs/tags/' ]]; then
            BRANCH="${GITHUB_REF_NAME}"
          else
            BRANCH="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          fi
          DESTINATION_DIR=/mnt/package/kms/$BRANCH
          ssh -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa \
            *.zip \
            cosmian@package.cosmian.com:$DESTINATION_DIR/

          if [ "${{ inputs.debug_or_release }}" == "release" ]; then
            ssh -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR/{rhel9,ubuntu-22.04,ubuntu-24.04}

            # RedHat 9 package
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa rhel9-${{ inputs.debug_or_release }}/__w/kms/kms/target/x86_64-unknown-linux-gnu/generate-rpm/*.rpm \
              cosmian@package.cosmian.com:$DESTINATION_DIR/rhel9

            # Ubuntu packages
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa ubuntu_22_04-${{ inputs.debug_or_release }}/home/runner/work/kms/kms/target/x86_64-unknown-linux-gnu/debian/*.deb \
              cosmian@package.cosmian.com:$DESTINATION_DIR/ubuntu-22.04
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa ubuntu_24_04-${{ inputs.debug_or_release }}/home/runner/work/kms/kms/target/x86_64-unknown-linux-gnu/debian/*.deb \
              cosmian@package.cosmian.com:$DESTINATION_DIR/ubuntu-24.04
          fi

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
            rhel9-release/__w/kms/kms/target/x86_64-unknown-linux-gnu/generate-rpm/*.rpm \
            ubuntu_22_04-release/home/runner/work/kms/kms/target/x86_64-unknown-linux-gnu/debian/*.deb \
            ubuntu_24_04-release/home/runner/work/kms/kms/target/x86_64-unknown-linux-gnu/debian/*.deb

  public_documentation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Deploy documentation in staging
        if: ${{ github.ref_name == 'develop' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: staging.yml
          repo: Cosmian/public_documentation
          ref: develop
          token: ${{ secrets.PAT_TOKEN }}

      - name: Deploy documentation in prod
        if: startsWith(github.ref, 'refs/tags')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: prod.yml
          repo: Cosmian/public_documentation
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
