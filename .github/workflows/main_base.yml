---
name: CI checks

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string
      platforms:
        required: true
        type: string

jobs:
  cargo-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: EmbarkStudios/cargo-deny-action@v1

  cargo-lint:
    uses: Cosmian/reusable_workflows/.github/workflows/clippy.yml@develop
    with:
      toolchain: ${{ inputs.toolchain }}

  build: # Build on Ubuntu 22/24, Rocky 8/9, MacOS 13/15 and Windows 22
    uses: Cosmian/reusable_workflows/.github/workflows/build_all.yml@invert_fips_feature
    secrets: inherit
    with:
      toolchain: ${{ inputs.toolchain }}
      debug_or_release: ${{ inputs.debug_or_release }}

  non-fips-image:
    name: Non-FIPS image build and tests
    uses: Cosmian/reusable_workflows/.github/workflows/build_docker_image.yml@develop
    with:
      prefix: ''
      registry-image: ghcr.io/cosmian/kms
      platforms: ${{ inputs.platforms }}
      fips: false

  fips-image:
    name: FIPS image build and tests
    uses: Cosmian/reusable_workflows/.github/workflows/build_docker_image.yml@develop
    with:
      prefix: FIPS
      registry-image: ghcr.io/cosmian/kms-fips
      platforms: ${{ inputs.platforms }}
      fips: true

  ##############################################################################
  ### Push binaries on package.cosmian.com and make Release
  ##############################################################################
  push-artifacts:
    needs:
      - cargo-audit
      - cargo-lint
      - build
    uses: Cosmian/reusable_workflows/.github/workflows/push-artifacts.yml@develop
    with:
      project-name: kms
      destination: kms
      debug_or_release: ${{ inputs.debug_or_release }}

  public_documentation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Deploy documentation in staging
        if: ${{ github.ref_name == 'develop' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: staging.yml
          repo: Cosmian/public_documentation
          ref: develop
          token: ${{ secrets.PAT_TOKEN }}

      - name: Deploy documentation in prod
        if: startsWith(github.ref, 'refs/tags')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: prod.yml
          repo: Cosmian/public_documentation
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
