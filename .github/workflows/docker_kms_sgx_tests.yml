---
name: KMS SGX

on:
  workflow_call:
    inputs:
      kms-version:
        required: true
        type: string

jobs:

  build_ckms:
    uses: ./.github/workflows/cargo_build.yml
    with:
      toolchain: nightly
      distribution: ubuntu-20.04
      archive-name: ckms_ubuntu_20_04
      commands: |
        cargo build --bin cosmian_kms_cli
      artifacts: |
        target/release/cosmian_kms_cli

  run_ckms:
    needs:
      - build_ckms
    runs-on: [self-hosted, sgx]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
      - run: cargo run --bin cosmian_kms_cli

  kms_sgx_test:
    needs:
      - run_ckms
    env: 
        KMS_USE_BOOTSTRAP_SERVER: true
        KMS_USE_CERTBOT: true
        KMS_CERTBOT_HOSTNAME: "kms.sgx.ci.cosmian.dev"
        KMS_CERTBOT_EMAIL: "tech@cosmian.com"
        KMS_CERTBOT_USE_TEE_KEY: "abcdef0123456789"

    services:
      kms:
        image: ghcr.io/cosmian/enclave-kms-insecure:${{ inputs.kms-version }}
        env:
          COSMIAN_SERVER_URL: http://kms.sgx.ci.cosmian.dev:9998
        ports:
          - 9998:9998

    runs-on: [self-hosted, sgx]
    steps:

      - name: Create directories
        run: |
          mkdir -p public_data/
          mkdir -p private_data/

      - name: Docker check container
        run: |
          docker run \
            --device /dev/sgx_enclave \
            --device /dev/sgx_provision \
            -e KMS_USE_BOOTSTRAP_SERVER="{{ KMS_USE_BOOTSTRAP_SERVER }}" \
            -e KMS_USE_CERTBOT="{{ KMS_USE_CERTBOT }}" \
            -e KMS_CERTBOT_HOSTNAME="{{ KMS_CERTBOT_HOSTNAME }}" \
            -e KMS_CERTBOT_EMAIL="{{ KMS_CERTBOT_EMAIL }}" \
            -e KMS_CERTBOT_USE_TEE_KEY="{{ KMS_CERTBOT_USE_TEE_KEY }}" \
            -v /var/run/aesmd:/var/run/aesmd/ \
            -v /opt/cosmian-internal:/opt/cosmian-internal \
            -v $PWD/public_data:/root/public_data \
            -v $PWD/private_data:/root/private_data \
            -p 80:80 \
            -d ghcr.io/cosmian/enclave-kms-insecure:${{ inputs.kms-version }}

      - name: Bootstrap
        run: KMS_CLI_CONF=sgx_ci/kms-test-ci.json ckms bootstrap-start --sqlite-path private_data/  --database-type sqlite

      - name: Verify
        run: KMS_CLI_CONF=sgx_ci/kms-test-ci.json ckms verify
      
      - name: Symmetric key create
        run: KMS_CLI_CONF=sgx_ci/kms-test-ci.json ckms sym keys create