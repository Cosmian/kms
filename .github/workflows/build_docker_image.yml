---
name: Docker build

on:
  workflow_call:
    inputs:
      prefix:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      registry-image:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    name: ${{ inputs.prefix }} Image
    runs-on: ubuntu-22.04
    container: docker:19.03.15

    steps:
      - name: Display cpuinfo
        run: cat /proc/cpuinfo

      - name: Install tar
        run: apk add --no-cache tar

      - uses: actions/checkout@v3

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ inputs.registry-image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and tag docker container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.dockerfile }}
          network: host

      - name: Display metadata version ${{ steps.meta.outputs.version }}
        run: |
          echo version: "${{ steps.meta.outputs.version }}"
          echo tags: "${{ steps.meta.outputs.tags }}"

    outputs:
      image-tag: ${{ inputs.registry-image }}:${{ steps.meta.outputs.version }}

  python_tests:
    name: ${{ inputs.prefix }} unit python tests
    needs:
      - build-and-push-image
    uses: ./.github/workflows/python_tests.yml
    secrets: inherit
    with:
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      branch: v5.0.1
      fips: ${{ inputs.prefix }}

  cloudproof_kms_js:
    name: ${{ inputs.prefix }} KMS JS tests
    needs:
      - build-and-push-image
    uses: Cosmian/reusable_workflows/.github/workflows/cloudproof_kms_js.yml@develop
    with:
      branch: develop
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      fips: ${{ inputs.prefix == 'FIPS' }}

  cloudproof_java:
    name: ${{ inputs.prefix }} Java tests
    needs:
      - build-and-push-image
    uses: Cosmian/reusable_workflows/.github/workflows/cloudproof_java_in_docker.yml@develop
    with:
      branch: develop
      target: x86_64-unknown-linux-gnu
      extension: so
      destination: linux-x86-64
      os: ubuntu-20.04
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      findex-cloud-version: 0.3.1
      copy_fresh_build: false
      fips: ${{ inputs.prefix == 'FIPS' }}

  cloudproof_python:
    name: ${{ inputs.prefix }} cloudproof_python tests
    needs:
      - build-and-push-image
    uses: Cosmian/reusable_workflows/.github/workflows/cloudproof_python.yml@develop
    with:
      branch: v5.0.1
      target: x86_64-unknown-linux-gnu
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      copy_fresh_build: true
      findex-cloud-version: 0.3.1
      fips: ${{ inputs.prefix == 'FIPS' }}
