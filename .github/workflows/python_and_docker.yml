---
name: Docker

on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/cosmian/kms

jobs:
  pyo3:
    uses: ./.github/workflows/python_build.yml
    with:
      toolchain: nightly-2023-03-20

  build-and-push-image:
    runs-on: ubuntu-latest
    container: docker:19.03.15

    steps:
      - uses: actions/checkout@v1

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and tag docker container
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
          REF_NAME: ${{ github.ref_name }}
          TAGS: ${{ steps.meta.outputs.tags }}
          LABELS: ${{ steps.meta.outputs.labels }}
        run: |
          set -x
          # Replace / by -
          REF=${REF_NAME//\//-}
          echo ${REGISTRY_IMAGE}
          echo ${REF_NAME}
          echo ${REF}
          echo ${TAGS}
          echo ${LABELS}
          echo ${REGISTRY_IMAGE}:${REF}

          # Build docker image
          docker build . -f delivery/Dockerfile.standalone -t ${REGISTRY_IMAGE}:${REF}
          # ghcr.io deployment
          docker tag ${TAGS} ${REGISTRY_IMAGE}:${REF}
          docker push ${REGISTRY_IMAGE}:${REF}
          docker push ${TAGS}

      - name: Re-tag docker for git tags
        if: startsWith(github.ref, 'refs/tags')
        env:
          BUILD_IMAGE: ${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}
        run: |
          # Get the latest main image
          docker pull ${{ env.REGISTRY_IMAGE }}:main
          # Tag it with the tag name
          docker tag ${{ env.REGISTRY_IMAGE }}:main ${BUILD_IMAGE}
          # Push the tagged image
          docker push ${BUILD_IMAGE}

      - name: Docker check container
        run: |
          docker run --rm ${{ steps.meta.outputs.tags }} --help

    outputs:
      image-tag: ${{ steps.meta.outputs.version }}

  python_tests:
    needs:
      - build-and-push-image
      - pyo3
    uses: ./.github/workflows/python_tests.yml
    secrets: inherit
    with:
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
