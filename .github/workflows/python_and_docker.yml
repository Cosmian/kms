---
name: Docker

on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/cosmian/kms

jobs:
  pyo3:
    uses: ./.github/workflows/python_build.yml
    with:
      toolchain: nightly-2023-08-17

  build-and-push-image:
    runs-on: ubuntu-22.04
    container: docker:19.03.15

    steps:
      - name: Display cpuinfo
        run: cat /proc/cpuinfo

      - uses: actions/checkout@v1

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and tag docker container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: delivery/Dockerfile.standalone
          network: host

      - name: Re-tag docker for git tags
        if: startsWith(github.ref, 'refs/tags')
        env:
          BUILD_IMAGE: ${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}
        run: |
          # Get the latest main image
          docker pull ${{ env.REGISTRY_IMAGE }}:main
          # Tag it with the tag name
          docker tag ${{ env.REGISTRY_IMAGE }}:main ${BUILD_IMAGE}
          # Push the tagged image
          docker push ${BUILD_IMAGE}

    outputs:
      image-tag: ${{ steps.meta.outputs.version }}

  python_tests:
    needs:
      - build-and-push-image
      - pyo3
    uses: ./.github/workflows/python_tests.yml
    secrets: inherit
    with:
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}

  cloudproof_js:
    needs:
      - build-and-push-image
      - pyo3
    uses: Cosmian/reusable_workflows/.github/workflows/cloudproof_js.yml@develop
    with:
      branch: v9.1.0
      target: wasm32-unknown-unknown
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      findex-cloud-version: 0.1.0
      copy_fresh_build: false

  cloudproof_java:
    needs:
      - build-and-push-image
      - pyo3
    uses: Cosmian/reusable_workflows/.github/workflows/cloudproof_java_in_docker.yml@develop
    with:
      branch: v6.0.0
      target: x86_64-unknown-linux-gnu
      extension: so
      destination: linux-x86-64
      os: ubuntu-20.04
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      findex-cloud-version: 0.1.0
      copy_fresh_build: false

  cloudproof_python:
    needs:
      - build-and-push-image
      - pyo3
    uses: Cosmian/reusable_workflows/.github/workflows/cloudproof_python.yml@develop
    with:
      branch: develop
      target: x86_64-unknown-linux-gnu
      kms-version: ${{ needs.build-and-push-image.outputs.image-tag }}
      copy_fresh_build: true
