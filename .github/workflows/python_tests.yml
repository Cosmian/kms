---
name: KMS Python tests

on:
  workflow_call:
    inputs:
      kms-version:
        required: true
        type: string
      branch:
        required: true
        type: string
      fips:
        required: true
        type: string

jobs:
  pyo3-test-linux:
    services:
      kms:
        image: ${{ inputs.kms-version }}
        env:
          COSMIAN_SERVER_URL: http://localhost:9998
        ports:
          - 9998:9998

    runs-on: ubuntu-22.04
    steps:
      - name: Docker check container
        run: |
          docker run --rm ${{ inputs.kms-version }} --help

      - uses: actions/checkout@v3
        with:
          repository: Cosmian/cloudproof_python
          ref: ${{ inputs.branch }}

      - name: Install cloudproof python deps
        env:
          COVER_CRYPT_TAG: last_build
          FINDEX_TAG: last_build
        run: |
          scripts/ci_install_pyo3_builds.sh

      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
      - run: find .

      - name: Install KMS python
        run: |
          # Check python code
          pip install kms_python_linux/*manylinux*.whl
          pip install -r crate/pyo3/python/requirements.txt

      - name: Test KMS python client on KMS server
        run: |
          # Check python code
          mypy crate/pyo3/python/scripts/test_kms.py
          python3 crate/pyo3/python/scripts/test_kms.py
          if [ ! "${{ inputs.fips }}" = "FIPS" ]; then
            mypy crate/pyo3/python/scripts/test_kms_covercrypt.py
            python3 crate/pyo3/python/scripts/test_kms_covercrypt.py
          fi

      - name: Check that the lib version is the same as the server
        run: |
          cargo install cargo-get
          diff <(cargo get --entry crate/pyo3 package.version) <(cargo get --entry crate/server package.version) || (echo "Update the version in crate/pyo3/Cargo.toml"; exit
            1)
