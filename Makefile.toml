[config]
default_to_workspace = false

[tasks.ci-format]
category = "dev"
description = "Run Rustfmt on base code"
script = "cargo format"

[tasks.ci-clippy-all]
category = "dev"
description = "Run Clippy on base code"
script = "cargo clippy-all"

[tasks.ci-build]
category = "dev"
description = "Build all"
script = '''
#!/bin/bash
set -ex
cargo check --all-targets --no-default-features
cargo check --all-targets --no-default-features --features insecure
cargo check --all-targets --no-default-features --features timeout
cargo build --all-targets --all-features
'''

[tasks.ci-cli]
category = "dev"
description = "Build CLI"
script = '''
#!/bin/bash
set -ex
rustup target add x86_64-pc-windows-gnu
cargo build --bin ckms --target x86_64-pc-windows-gnu
cargo build --bin ckms
'''

[tasks.ci-rust-tests]
category = "dev"
description = "Run Rust tests"
script = '''
#!/bin/bash
set -ex
cargo test --workspace --features insecure --no-default-features -- --nocapture
cargo test --bins -- --nocapture
'''

[tasks.ci]
dependencies = [
  "ci-format",
  "ci-clippy-all",
  "ci-build",
  "ci-cli",
  "ci-rust-tests",
]

#
# Local tests
#
[tasks.rust-tests]
env = { TEST_DB = "kms", TEST_USER = "kms", TEST_PASSWORD = "kms", TEST_HOST_AUTH_METHOD = "trust", TEST_HOST = "localhost" }
script.pre = '''
#!/bin/bash
set -ex

# delete any previous temporary files
rm -fr /tmp/sqlite-data /tmp/tmp.json

sudo docker stop postgre || true
sudo docker stop mariadb || true
sudo docker stop mysql   || true

sudo docker run -d --rm --network=host --name postgre -e POSTGRES_DB=$TEST_DB -e POSTGRES_USER=$TEST_USER -e POSTGRES_PASSWORD=$TEST_PASSWORD postgres:latest
sudo docker run -d --rm --network=host --name mariadb -e MYSQL_DATABASE=$TEST_DB -e MYSQL_ROOT_PASSWORD=$TEST_PASSWORD mariadb:latest
'''
script.main = '''
#!/bin/bash
set -ex
export KMS_POSTGRES_URL="postgres://$TEST_USER:$TEST_PASSWORD@$TEST_HOST/$TEST_DB"
export KMS_MYSQL_URL="mysql://root:$TEST_PASSWORD@$TEST_HOST/$TEST_DB"
export KMS_ENCLAVE_DIR_PATH="data/public"
export KMS_SQLITE_PATH="data/shared"
export KMS_CERTBOT_SSL_PATH="data/private"

cargo build --bin ckms

cargo test --workspace --features insecure --no-default-features -- --nocapture
cargo test --bins -- --nocapture

#############################################
# Run tests again, against a MySQL database #
#############################################

# delete any previous temporary files
rm -fr /tmp/sqlite-data tmp.json

sudo docker stop mariadb || true
sudo docker stop postgre || true
sudo docker run -d --rm --network=host --name postgre -e POSTGRES_DB=$TEST_DB -e POSTGRES_USER=$TEST_USER -e POSTGRES_PASSWORD=$TEST_PASSWORD postgres:latest
sudo docker run -d --rm --network=host --name mysql -e MYSQL_DATABASE=$TEST_DB -e MYSQL_ROOT_PASSWORD=$TEST_PASSWORD mysql:latest

cargo test --workspace --features insecure --no-default-features -- --nocapture
'''
script.post = '''
#!/bin/bash
sudo docker stop postgre || true
sudo docker stop mysql   || true
'''
