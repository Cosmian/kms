FROM ubuntu:20.04 as minimal-sgx

USER root
ENV DEBIAN_FRONTEND=noninteractive
ENV TS=Etc/UTC
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

WORKDIR /root

RUN apt-get update && apt-get install --no-install-recommends -qq -y \
    build-essential \
    protobuf-compiler \
    libprotobuf-dev \
    libprotobuf-c-dev \
    python3 \
    gnupg \
    ca-certificates \
    curl \
    libsodium-dev \
    tzdata \
    && apt-get -y -q upgrade \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN echo "deb [arch=amd64 signed-by=/usr/share/keyrings/gramine-keyring.gpg] https://packages.gramineproject.io/ stable main" >> /etc/apt/sources.list.d/gramine.list \
    && curl -fsSLo /usr/share/keyrings/gramine-keyring.gpg https://packages.gramineproject.io/gramine-keyring.gpg 

RUN echo "deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main" >> /etc/apt/sources.list.d/intel-sgx.list \
    && curl -fsSL https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -

RUN apt-get update && apt-get install --no-install-recommends -qq -y \
    gramine \
    libsgx-launch \
    libsgx-urts \
    libsgx-quote-ex \
    libsgx-epid \
    libsgx-dcap-ql \
    libsgx-dcap-default-qpl \
    sgx-aesm-service \
    libsgx-aesm-quote-ex-plugin \
    && rm -rf /var/lib/apt/lists/*

# SGX SDK is installed in /opt/intel directory.
WORKDIR /opt/intel

ARG SGX_SDK_INSTALLER=sgx_linux_x64_sdk_2.16.100.4.bin

# Install SGX SDK
RUN curl -fsSLo $SGX_SDK_INSTALLER https://download.01.org/intel-sgx/sgx-linux/2.16/distro/ubuntu20.04-server/$SGX_SDK_INSTALLER \
    && chmod +x  $SGX_SDK_INSTALLER \
    && echo "yes" | ./$SGX_SDK_INSTALLER \
    && rm $SGX_SDK_INSTALLER

#
# Minimal Rust image
#
FROM ubuntu:20.04 as minimal-rust

USER root
ENV DEBIAN_FRONTEND=noninteractive
ENV TS=Etc/UTC
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

WORKDIR /root

RUN apt-get update \
    && apt-get install --no-install-recommends -qq -y \
    curl \
    build-essential \
    libssl-dev \
    ca-certificates \
    libclang-dev \
    libsodium-dev \
    pkg-config \
    && apt-get -y -q upgrade \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh   -s --  -y

COPY . /root

ARG FEATURES

RUN /root/.cargo/bin/cargo build --release --no-default-features ${FEATURES}

#
# Minimal kms
#
FROM minimal-sgx as kms

USER root
ENV DEBIAN_FRONTEND=noninteractive
ENV TS=Etc/UTC
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

WORKDIR /root

RUN mkdir -p scripts
# private_data, public_data and shared_data are supposed to be given as parameters of the docker run

ARG KMS_DOMAIN
ENV KMS_DOMAIN=${KMS_DOMAIN}

COPY --from=minimal-rust /root/target/release/cosmian_kms_server scripts/server
COPY etc enclave/build_and_run.sh enclave/Makefile enclave/kms.manifest.template /root/

ENTRYPOINT ["./build_and_run.sh"]
