#!/bin/bash
set -e

if [ "$#" -ne 1 ]; then
    echo -e "Usage: ./local_ossl_instl.sh <OPENSSL_DIR>"
    exit 1
fi

echo "Setup for OpenSSL version 3.1.0 with FIPS module"
echo "Installing OpenSSL to "${1}" ..."

if [[ ! -d "${1}" ]]; then
    echo "ERROR: Specified directory does not exist"
    exit 2
fi

cd "${1}"
export OPENSSL_DIR="$(pwd)"
cd -

# Creating ssl config files directory.
mkdir ""${OPENSSL_DIR}"/ssl"

path_save="$(pwd)"

# Downloading and installing OpenSSL 3.1.0.
cd "$(mktemp -d)"
wget https://github.com/openssl/openssl/releases/download/openssl-3.1.0/openssl-3.1.0.tar.gz

echo -n Extracting compressed archive...
tar -xf openssl-3.1.0.tar.gz
echo done
rm openssl-3.1.0.tar.gz

cd openssl-3.1.0/
./Configure --prefix="${OPENSSL_DIR}" --openssldir=""${OPENSSL_DIR}"/ssl" enable-fips no-shared \
&& make -s -j && make install -s -j

# Hardcode config file changes for FIPS module.
# sed replaces lines 45 to 61 with the following text. If changing OpenSSL
# version, check that lines concerned in this file are the same.
sed -i "45,61c\
# For FIPS\n\
# Optionally include a file that is generated by the OpenSSL fipsinstall\n\
# application. This file contains configuration data required by the OpenSSL\n\
# fips provider. It contains a named section e.g. [fips_sect] which is\n\
# referenced from the [provider_sect] below.\n\
# Refer to the OpenSSL security policy for more information.\n\
.include $OPENSSL_DIR/ssl/fipsmodule.cnf\n\
\n\
[ openssl_init ]\n\
providers = provider_sect\n\
\n\
# List of providers to load\n\
[ provider_sect ]\n\
# The fips section name should match the section name inside the\n\
# included fipsmodule.cnf.\n\
fips = fips_sect\n\
base = base_sect\n\
\n\
[ base_sect ]\n\
activate = 1" "${OPENSSL_DIR}"/ssl/openssl.cnf

echo -e "\nOpenSSL successfully installed at "${OPENSSL_DIR}""

cd "${path_save}"

echo -e "\nIf this program was not sourced, remember to export the absolute path of "${OPENSSL_DIR}" as an environement variable."
